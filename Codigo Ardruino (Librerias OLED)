#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>

#define ANCHO_PANTALLA 128 // Ancho de la pantalla OLED
#define ALTO_PANTALLA 64 // Alto de la pantalla OLED

#define OLED_RESET     -1 // Pin reset incluido en algunos modelos de pantallas (-1 si no disponemos de pulsador). 
#define DIRECCION_PANTALLA 0x3C //Direcci√≥n de comunicacion: 0x3D para 128x64, 0x3C para 128x32

Adafruit_SSD1306 display(ANCHO_PANTALLA, ALTO_PANTALLA, &Wire, OLED_RESET);

#define LOGO_WIDTH    84
#define LOGO_HEIGHT   52

int Motor2        = 10; 
int Motor1        = 9;    
int BotonParo     = 2;
int Motor3        = 11;
int BotonInicio   = 5;
int FocoRojo      = 6;
int FocoAmarillo  = 7;
int FocoVerde     = 8;
int estado; 
volatile bool ValorParo=false;
volatile bool ValorInicio=false;

//************************************LOGO MOTORES**********************************************
const unsigned char PROGMEM logomotor[]
{
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x7f, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x77, 0xff, 0xe0, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x67, 0x0e, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x67, 0x0f, 
	0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x70, 0x00, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xfc, 0x7f, 0xff, 
	0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0x00, 0x00, 
	0x00, 0x00, 0xf0, 0x03, 0x9c, 0x00, 0x00, 0x03, 0xfe, 0x00, 0x00, 0x00, 0x01, 0xc0, 0x03, 0x9f, 
	0xff, 0xff, 0xff, 0xfe, 0x00, 0x00, 0x00, 0x01, 0xc0, 0x03, 0x9f, 0xff, 0xff, 0xff, 0x0e, 0x00, 
	0x00, 0x00, 0x01, 0xc0, 0x03, 0x9c, 0x00, 0x00, 0x07, 0x0f, 0xf0, 0x00, 0x00, 0x01, 0xc0, 0x03, 
	0x9c, 0x00, 0x00, 0x03, 0x0f, 0x70, 0x00, 0x00, 0x01, 0xc0, 0x03, 0x9c, 0x00, 0x00, 0x03, 0x0e, 
	0x38, 0x00, 0x00, 0x01, 0xc0, 0x03, 0x9c, 0x00, 0x00, 0x07, 0x0e, 0x3f, 0xf8, 0x00, 0x01, 0xc0, 
	0x03, 0x9f, 0xff, 0xff, 0xff, 0x0e, 0x3f, 0xf8, 0x00, 0x01, 0xc0, 0x03, 0x9f, 0xff, 0xff, 0xff, 
	0x0e, 0x38, 0x38, 0x00, 0x01, 0xc0, 0x03, 0x9c, 0x00, 0x00, 0x03, 0x0e, 0x38, 0x38, 0x00, 0x01, 
	0xc0, 0x03, 0x9c, 0x00, 0x00, 0x03, 0x0e, 0x38, 0x38, 0x00, 0x01, 0xc0, 0x03, 0x9c, 0x00, 0x00, 
	0x07, 0x0e, 0x38, 0x38, 0x00, 0x01, 0xc0, 0x03, 0x9f, 0xff, 0xff, 0xff, 0x0e, 0x38, 0x38, 0x00, 
	0x01, 0xc0, 0x03, 0x9f, 0xff, 0xff, 0xff, 0x0e, 0x3f, 0xf8, 0x00, 0x01, 0xc0, 0x03, 0x9c, 0x00, 
	0x00, 0x03, 0x0e, 0x3f, 0xf0, 0x00, 0x01, 0xc0, 0x03, 0x9c, 0x00, 0x00, 0x07, 0x0e, 0x38, 0x00, 
	0x00, 0x01, 0xc0, 0x03, 0x9c, 0x00, 0x00, 0x07, 0x0f, 0xf8, 0x00, 0x00, 0x01, 0xc0, 0x03, 0x9f, 
	0xff, 0xff, 0xff, 0x0f, 0xf0, 0x00, 0x00, 0x01, 0xc0, 0x03, 0x9f, 0xff, 0xff, 0xff, 0x0e, 0x00, 
	0x00, 0x00, 0x00, 0xe0, 0x03, 0x9c, 0x00, 0x00, 0x07, 0xfe, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 
	0xfc, 0x00, 0x00, 0x07, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x0e, 0x38, 0x01, 0xc7, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x38, 0x01, 0xc7, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x00, 0x00, 
	0x00, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x00, 0x00, 0x00, 0x70, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 
	0xff, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

//************************************LOGO START*************************************************
const unsigned char PROGMEM logoinicio[]
{
	0x00, 0x00, 0x00, 0x00, 0x1f, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 
	0xff, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xe0, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 
	0x00, 0x00, 0x00, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x07, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0x80, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x7f, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x00, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xf8, 0x00, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x07, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xfe, 0x00, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 
	0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0x1f, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xc0, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x7f, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xe0, 0x7f, 0xc0, 0x78, 0x00, 0x3c, 0x1f, 0x80, 0x1c, 0x00, 0x1f, 0xf0, 0xff, 0x80, 0x18, 
	0x00, 0x38, 0x1f, 0x80, 0x04, 0x00, 0x1f, 0xf0, 0xff, 0x06, 0x1f, 0x81, 0x78, 0x0f, 0x87, 0x07, 
	0xc0, 0x7f, 0xf0, 0xff, 0x00, 0x7f, 0x83, 0xf0, 0x87, 0x82, 0x07, 0xe1, 0xff, 0xf0, 0xff, 0xc0, 
	0x1f, 0x83, 0xe1, 0x87, 0x80, 0x0f, 0xe1, 0xff, 0xf0, 0xff, 0xfc, 0x0f, 0x83, 0xe0, 0x03, 0x80, 
	0x0f, 0xe1, 0xff, 0xf0, 0xff, 0x0e, 0x0f, 0x83, 0xc0, 0x01, 0x87, 0x07, 0xe1, 0xff, 0xf0, 0x7f, 
	0x00, 0x1f, 0x83, 0x83, 0xc1, 0x87, 0x07, 0xe1, 0xff, 0xf0, 0x7f, 0xc0, 0x3f, 0x83, 0x87, 0xe1, 
	0x87, 0x83, 0xe1, 0xff, 0xe0, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 
	0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x3f, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xc0, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0x0f, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xfe, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x03, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xf8, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x00, 0x00, 0x3f, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0x80, 0x00, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x00, 0x00, 
	0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0x00, 0x00, 
	0x00, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 
	0xff, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0xfe, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00
};

//************************************LOGO PARO EMERGENCIA****************************************
//Nota, no se porque en este caso no
const unsigned char PROGMEM logoparo[]
{
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 
	0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x00, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 
	0xf0, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xf0, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0x00, 0x00, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 0xff, 0xfe, 
	0x00, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 0xff, 0xfd, 0x00, 0x60, 0x0b, 
	0xff, 0xff, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00, 0xf0, 0x01, 0xff, 0xff, 0xff, 
	0xff, 0xf0, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x01, 0xf8, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xf0, 0xff, 
	0xff, 0xff, 0xff, 0xe0, 0x03, 0xfc, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 0xff, 
	0xc0, 0x0f, 0xff, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 0xff, 0x00, 0x1f, 0xff, 
	0x80, 0x0f, 0xff, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 0xff, 0x00, 0x3f, 0xff, 0xc0, 0x0f, 0xff, 
	0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x78, 0x01, 0xe0, 0x03, 0xff, 0xff, 0xff, 0xf0, 
	0xff, 0xff, 0xff, 0xf8, 0x00, 0xe0, 0x00, 0x70, 0x01, 0xff, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 
	0xf0, 0x00, 0xc0, 0x00, 0x30, 0x00, 0xff, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 0xe0, 0x07, 0xc0, 
	0x00, 0x3e, 0x00, 0x7f, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 0xc0, 0x0f, 0xc0, 0x00, 0x3f, 0x00, 
	0x3f, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 0x80, 0x0f, 0xc0, 0x00, 0x3f, 0x00, 0x1f, 0xff, 0xff, 
	0xf0, 0xff, 0xff, 0xfe, 0x00, 0x1f, 0xc0, 0x00, 0x3f, 0x80, 0x07, 0xff, 0xff, 0xf0, 0xff, 0xff, 
	0xfc, 0x00, 0x7f, 0xc0, 0x00, 0x3f, 0xe0, 0x03, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xf8, 0x00, 0xff, 
	0xc0, 0x00, 0x3f, 0xf0, 0x01, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xf8, 0x01, 0xff, 0xe0, 0x00, 0x3f, 
	0xf8, 0x01, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xf0, 0x03, 0xff, 0xe0, 0x00, 0x3f, 0xfc, 0x00, 0x7f, 
	0xff, 0xf0, 0xff, 0xff, 0xc0, 0x07, 0xff, 0xe0, 0x00, 0x3f, 0xfe, 0x00, 0x1f, 0xff, 0xf0, 0xff, 
	0xff, 0x80, 0x1f, 0xff, 0xe0, 0x00, 0x7f, 0xff, 0x80, 0x1f, 0xff, 0xf0, 0xff, 0xff, 0x00, 0x3f, 
	0xff, 0xe0, 0x00, 0x7f, 0xff, 0xc0, 0x0f, 0xff, 0xf0, 0xff, 0xfe, 0x00, 0x7f, 0xff, 0xe0, 0x00, 
	0x7f, 0xff, 0xe0, 0x07, 0xff, 0xf0, 0xff, 0xfc, 0x00, 0x7f, 0xff, 0xe0, 0x00, 0x7f, 0xff, 0xe0, 
	0x03, 0xff, 0xf0, 0xff, 0xf0, 0x01, 0xff, 0xff, 0xf0, 0x00, 0xff, 0xff, 0xf8, 0x00, 0xff, 0xf0, 
	0xff, 0xe0, 0x03, 0xff, 0xff, 0xf0, 0x00, 0xff, 0xff, 0xfc, 0x00, 0x7f, 0xf0, 0xff, 0xc0, 0x07, 
	0xff, 0xff, 0xf0, 0x00, 0xff, 0xff, 0xfe, 0x00, 0x3f, 0xf0, 0xff, 0x80, 0x0f, 0xff, 0xff, 0xf8, 
	0x01, 0xff, 0xff, 0xff, 0x00, 0x1f, 0xf0, 0xff, 0x00, 0x1f, 0xff, 0xff, 0xf8, 0x01, 0xff, 0xff, 
	0xff, 0x80, 0x0f, 0xf0, 0xfe, 0x00, 0x3f, 0xff, 0xff, 0xf8, 0x01, 0xff, 0xff, 0xff, 0xc0, 0x03, 
	0xf0, 0xfc, 0x00, 0x7f, 0xff, 0xff, 0xf8, 0x01, 0xff, 0xff, 0xff, 0xe0, 0x03, 0xf0, 0xf8, 0x01, 
	0xff, 0xff, 0xff, 0xf0, 0x00, 0xff, 0xff, 0xff, 0xf8, 0x01, 0xf0, 0xe0, 0x01, 0xff, 0xff, 0xff, 
	0xf0, 0x00, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x70, 0xe0, 0x07, 0xff, 0xff, 0xff, 0xf0, 0x00, 0xff, 
	0xff, 0xff, 0xfe, 0x00, 0x70, 0xc0, 0x0f, 0xff, 0xff, 0xff, 0xf0, 0x00, 0xff, 0xff, 0xff, 0xff, 
	0x00, 0x30, 0x00, 0x1f, 0xff, 0xff, 0xff, 0xf0, 0x00, 0xff, 0xff, 0xff, 0xff, 0x80, 0x00, 0x00, 
	0x1f, 0xff, 0xff, 0xff, 0xf8, 0x01, 0xff, 0xff, 0xff, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0xe0, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xf0
};
//********************************************************************************************
//                                      VOID SETUP
//********************************************************************************************


void setup()
{
    Serial.begin(9600);
  
  if(!display.begin(SSD1306_SWITCHCAPVCC, DIRECCION_PANTALLA)) {
    Serial.println(F("Fallo en la asignacion de SSD1306"));
  }
  display.clearDisplay(); 
  display.setTextSize(1);
  display.setTextColor(WHITE);
  display.setCursor(22,0);
  display.println("INICIE PROCESO");
  display.display();

  //display.drawLine(0, 10, 128, 10, WHITE);
  display.drawBitmap( (display.width() - LOGO_WIDTH ) / 2,((display.height()- LOGO_HEIGHT) / 2 )+7, logoinicio, LOGO_WIDTH, LOGO_HEIGHT, WHITE);
  display.display();

 

 //-----------------ENTRADA Y SALIDA DE PINES -----------------------------------
  pinMode (FocoRojo,OUTPUT);
  pinMode (FocoAmarillo,OUTPUT);
  pinMode (FocoVerde,OUTPUT);
  pinMode (BotonInicio,INPUT_PULLUP);
  pinMode (BotonParo,INPUT_PULLUP);
  pinMode (Motor1,OUTPUT);
  pinMode (Motor2,OUTPUT);
  pinMode (Motor3,OUTPUT);
  digitalWrite(FocoRojo,HIGH);
  digitalWrite(FocoVerde,LOW);
  attachInterrupt(digitalPinToInterrupt(BotonParo),ParoEmergencia,FALLING);
 //------------------------------------------------------------------------------- 
}

void loop() 
{

 if(!ValorParo)
 {
   CicloMotor1:
   do
   {
     digitalWrite(FocoRojo,HIGH);
     //delay(10);
     //digitalWrite(FocoRojo,HIGH);
     //delay(10);
   }
   
    while (digitalRead(BotonInicio) == HIGH); 
   {
      digitalWrite(FocoRojo,LOW);
      CicloMotor:

     for(int ciclo = 0; ciclo < 1; ciclo++)
     {
       //--------MOTOR1---------------------------------------------------------------------------------------------------------------------------------------//
                                                                                                                                                              
       display.clearDisplay(); 
       display.setTextSize(2);
       display.setTextColor(WHITE);
       display.setCursor(20,0);
       display.println("MOTOR 1");
       display.drawBitmap( (display.width() - LOGO_WIDTH ) / 2,((display.height()- LOGO_HEIGHT) / 2 )+7, logomotor, LOGO_WIDTH, LOGO_HEIGHT, WHITE);
       display.display();
       digitalWrite(Motor1,HIGH);
       ParpadeoFoco(FocoVerde, Motor1);
       digitalWrite(Motor1,LOW);
       //-------MOTOR2-------------------------------------------------------------------------------------------------------------------------------------------
       display.clearDisplay(); 
       display.setTextSize(2);
       display.setTextColor(WHITE);
       display.setCursor(20,0);
       display.println("MOTOR 2");
       display.drawBitmap( (display.width() - LOGO_WIDTH ) / 2,((display.height()- LOGO_HEIGHT) / 2 )+7, logomotor, LOGO_WIDTH, LOGO_HEIGHT, WHITE);
       display.display();
       digitalWrite(Motor2,HIGH);
       ParpadeoFoco(FocoVerde, Motor2);
       digitalWrite(Motor2,LOW);
       //-------MOTOR3--------------------------------------------------------------------------------------------------------------------------------------------
       display.clearDisplay(); 
       display.setTextSize(2);
       display.setTextColor(WHITE);
       display.setCursor(20,0);
       display.println("MOTOR 3");
       display.drawBitmap( (display.width() - LOGO_WIDTH ) / 2,((display.height()- LOGO_HEIGHT) / 2 )+7, logomotor, LOGO_WIDTH, LOGO_HEIGHT, WHITE);
       display.display();
       digitalWrite(Motor3,HIGH);
       ParpadeoFoco(FocoVerde, Motor3);
       digitalWrite(Motor3,LOW);
       digitalWrite(FocoVerde,HIGH);
       
       //--------------------------------------------------------------------------------------------------------------------------------------------------------------
     }
      //******************************MENSAJE CICLO TERMINADO********************************************************************
      display.clearDisplay();
      display.setTextSize(2);
      display.setTextColor(WHITE);
      display.setCursor(32,0);
      display.println("CICLO");
      display.display(); 
      display.setTextSize(2);
      display.setTextColor(WHITE);
      display.setCursor(10,40);
      display.println("TERMINADO");
      display.display();
      //*********************************PARPADEO FOCO*****************************************************************************
      digitalWrite(FocoAmarillo,HIGH);
      delay(500);
      digitalWrite(FocoAmarillo,LOW);
      delay(500);
      digitalWrite(FocoAmarillo,HIGH);
      delay(500);
      digitalWrite(FocoAmarillo,LOW);
   }
   goto CicloMotor;
 }   
     //else
     //{
     //  ParoEmergencia();
     //}
     //ParodeEmergencia:
  
} 

//********************************************************************************************
//                               FUNCIONES
//********************************************************************************************

//********************************Parpadeo y Contador de*************************************
void ParpadeoFoco(int Foco,int Motor)
{
  for (int i = 1; i < 5; i++) 
  {
    digitalWrite(Motor,HIGH),
    digitalWrite(Foco, HIGH);
    delay(500);
    digitalWrite(Foco, LOW);
    delay(500);
    display.clearDisplay(); 
    display.setCursor(57,5);
    display.setTextSize(5);
    display.setTextColor(WHITE);
    display.println(i);
    display.display();
    display.setCursor(45,50);
    display.setTextSize(1);
    display.setTextColor(WHITE);
    display.println("segundos");
    display.display();
    if(digitalRead(BotonParo)==LOW)
    {
    break;
    ParoEmergencia();
    }
  }

}
//********************************PARO DE EMERGENCIA***********************************n**
void ParoEmergencia(void)
{
  while(digitalRead(BotonInicio)==HIGH)
  {
    //Logoparo();
    digitalWrite(FocoVerde,LOW);
    digitalWrite(FocoAmarillo,LOW);
    digitalWrite(Motor1,LOW);
    digitalWrite(Motor2,LOW);
    digitalWrite(Motor3,LOW);
    digitalWrite(FocoRojo,HIGH);
  }
  digitalWrite(FocoRojo,LOW);
  
}
//************************************LOGO EMERGENCIA***************************************
void Logoparo(void)
{
  display.clearDisplay(); 
  display.drawBitmap( (display.width() - LOGO_WIDTH ) / 2,((display.height()- LOGO_HEIGHT) / 2 )+7, logoparo, LOGO_WIDTH, LOGO_HEIGHT, WHITE);
  display.display();
  
}



